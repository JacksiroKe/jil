// Lex for Go
// Last update: 2015-10-26

lex = (
    { id = "comment"; quote = [ "/*", "*/" ]; multi_line = true; },
    { id = "comment"; quote = [ "//" ]; }, // EOL is not escapable.
    { id = "constant.string"; quote = [ "\"", "\"" ]; escape_eol = true; },
    // Raw string.
    { id = "constant.string"; quote = [ "`", "`" ]; multi_line = true; },
    { id = "constant.char"; quote = [ "'", "'" ]; },

    { id = "constant"; anyof = "iota"; },
    { id = "constant.bool"; anyof = "true false"; },
    { id = "constant.null"; anyof = "nil"; },
    {
        id = "identifier.function";
        anyof = "append cap close complex copy delete imag len "
                "make new panic print println real recover";
    },
    // TODO: func is also a type.
    { id = "statement"; anyof = "func defer go goto return var type"; },
    { id = "statement.package"; anyof = "package import"; },
    { id = "statement.conditional"; anyof = "if else switch case default select"; },
    { id = "statement.repeat"; anyof = "for range break continue fallthrough"; },
    {
        id = "type";
        anyof = "chan map bool string error "
                "int int8 int16 int32 int64 rune "
                "byte uint uint8 uint16 uint32 uint64 uintptr "
                "float32 float64 complex64 complex128";
    },
    { id = "type.qualifier"; anyof = "const"; },
    { id = "type.struct"; anyof = "struct interface"; },

    { id = "constant.number"; prefix = "\d"; use_regex = true; },

    { id = "identifier.function"; prev = "func"; },
    { id = "identifier.function"; next = "("; }
);
