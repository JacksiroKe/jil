// Lex for Lua
// Last update: 2015-02-11

lex = (
    // Quote

    // NOTE: Don't combine the following two comment quotes, or the comment
    // function can't recognize the comment start and end.
    { id = "comment"; quote = [ "--[[", "--]]" ]; multi_line = true; },
    { id = "comment"; quote = [ "--\[(=+)\[", "--]\\1]" ]; regex = true; multi_line = true; },

    { id = "comment"; quote = [ "--" ]; },
    { id = "constant.string"; quote = [ "\"", "\"" ]; },
    { id = "constant.string"; quote = [ "'", "'" ]; },
    { id = "constant.string"; quote = [ "\[(=*)\[", "]\\1]" ]; regex = true; multi_line = true; },

    // Anyof
    { id = "constant.bool"; anyof = "true false"; },
    { id = "constant.null"; anyof = "nil"; },
    { id = "identifier"; anyof = "_G _VERSION"; },
    { id = "statement"; anyof = "break goto return end local"; },
    { id = "statement.conditional"; anyof = "if then else elseif and in not or"; },
    { id = "statement.repeat"; anyof = "for do while repeat until"; },
    { id = "type.struct"; anyof = "function"; },

    // Basic functions
    {
        id = "identifier.function";
        anyof = "assert collectgarbage dofile error getmetatable ipairs load "
                "loadfile next pairs pcall print rawequal rawget rawlen rawset "
                "select setmetatable tonumber tostring type xpcall";
    }
);
